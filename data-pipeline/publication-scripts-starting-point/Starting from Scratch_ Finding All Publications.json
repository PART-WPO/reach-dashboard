{"files":[{"id":"e110acf7-9fcd-4728-9bbb-ec7e3d2abb99","name":"appsscript","type":"json","source":"{\n  \"timeZone\": \"America/New_York\",\n  \"dependencies\": {\n  },\n  \"exceptionLogging\": \"STACKDRIVER\",\n  \"runtimeVersion\": \"V8\"\n}"},{"id":"0ead4dd5-2745-4a9d-923b-bcbb3a7095a1","name":"Code","type":"server_js","source":"/**\n * getAllPublicationsForAwards\n *\n * Purpose:\n *   For each award number listed in the \"Award Numbers\" sheet (column A, starting A2),\n *   query Crossref (via helper searchCrossRefForAward), collect publications\n *   published BEFORE 2024-10-01, and write the results to a sheet named \"All publications\".\n *\n * Output:\n *   Overwrites the \"All publications\" sheet with a table:\n *   [Award Number, DOI, Title, Published Date (YYYY-MM-DD), Citation]\n *\n * Requirements:\n *   - Sheet \"Award Numbers\" exists; award numbers are in column A (header in A1, data from A2 down).\n *   - Helper function searchCrossRefForAward(award: string) -\u003e Array\u003c{doi, title, publishedDate, citation}\u003e\n *   - Helper function logScriptRun(functionName: string) for audit logging (optional).\n *\n * Notes:\n *   - Cutoff date is set to 2024-10-01 (change \u0027cutoffDate\u0027 below if needed).\n *   - Existing contents of \"All publications\" are cleared and replaced each run.\n */\nfunction getAllPublicationsForAwards() {\n  // Locate the input sheet that contains award numbers\n  const sheet \u003d SpreadsheetApp.getActiveSpreadsheet().getSheetByName(\"Award Numbers\");\n  if (!sheet) throw new Error(\u0027Sheet \"Award Numbers\" not found.\u0027);\n\n  // Read all award numbers from column A (starting at A2), flatten to a single array,\n  // ensure values are strings, and trim whitespace\n  const awardNumbers \u003d sheet\n    .getRange(\"A2:A\" + sheet.getLastRow())\n    .getValues()\n    .flat()\n    .map(a \u003d\u003e a.toString().trim())\n    .filter(Boolean); // drop blank rows just in case\n\n  // Only keep publications strictly BEFORE this cutoff date\n  const cutoffDate \u003d new Date(\u00272024-10-01\u0027);\n\n  // Initialize output table with header row\n  const results \u003d [[\"Award Number\", \"DOI\", \"Title\", \"Published Date\", \"Citation\"]];\n  let totalFound \u003d 0;\n\n  // Iterate each award number and collect qualifying publications\n  awardNumbers.forEach((award, index) \u003d\u003e {\n    Logger.log(`[${index + 1}/${awardNumbers.length}] Checking: ${award}`);\n\n    // Query Crossref (helper must return an array of publication objects)\n    const pubs \u003d searchCrossRefForAward(award);\n    Logger.log(`--\u003e ${pubs.length} total publication(s) returned for ${award}`);\n\n    // Filter by cutoff date and append to results\n    pubs.forEach(pub \u003d\u003e {\n      const pubDate \u003d new Date(pub.publishedDate);\n      if (pubDate \u003c cutoffDate) {\n        // Normalize to YYYY-MM-DD for consistent sheet formatting\n        const pubDateStr \u003d pubDate.toISOString().split(\"T\")[0];\n        results.push([award, pub.doi, pub.title, pubDateStr, pub.citation]);\n        totalFound++;\n      }\n    });\n  });\n\n  // Prepare (or create) the output sheet and write the table in one batch\n  const ss \u003d SpreadsheetApp.getActiveSpreadsheet();\n  const outputSheetName \u003d \"All publications\";\n  const outSheet \u003d ss.getSheetByName(outputSheetName) || ss.insertSheet(outputSheetName);\n\n  // Clear previous content before writing the new table\n  outSheet.clearContents();\n  outSheet.getRange(1, 1, results.length, results[0].length).setValues(results);\n\n  Logger.log(`âœ… Added ${totalFound} publication(s) published before 2024-10-01 to \"${outputSheetName}\"`);\n\n  // Optional: record that this script ran (helper handles storage/logging)\n  logScriptRun(\"getAllPublicationsForAwards\");\n}"}]}